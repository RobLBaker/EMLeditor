% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/editEMLfunctions.R
\name{set_producing_units}
\alias{set_producing_units}
\title{Sets Producing Units for use in DataStore}
\usage{
set_producing_units(emlObject, prodUnits, NPS = TRUE)
}
\arguments{
\item{emlObject}{is an R object imported (typically from an EML-formatted .xml file) using EmL::read_eml(<filename>, from="xml").}

\item{prodUnits}{A string that is the producing unit Unit Code or a list of unit codes, for example "ROMO" or c("ROMN", "SODN")}

\item{NPS}{defaults to TRUE. Checks EML for NPS publisher info and injects it if publisher is empty. If publisher already exists, does nothing. If you are not publishing with NPS, set to FALSE. If NPS=TRUE, the originatingAgency will be set to NPS and the field that maps to DataStore's "by or for NPS" will be set to TRUE.}
}
\value{
an EML object
}
\description{
set_producing_units inserts the unit code for the producing unit for the data/metadata into the EML metdata file.
}
\details{
inserts the unit code into the metadataProvider element. Currently cannot add to existing metadataProvider fields; it will just over-write them. It also currently only handles a single producing unit. See @param NPS for details on sub-functions. Additionally, information about the version of EML editor used will be injected into the metadata.
}
\examples{
\dontrun{
prodUnits<-c("ABCD", "EFGH")
set_producing_units(emlObject, prodUnits

set_producing_units(emlObject, c("ABCD", "EFGH"))

set_producing_units(emlObject, "ABCD")
}
}
