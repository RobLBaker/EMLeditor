% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/editEMLfunctions.R
\name{set_producing_units}
\alias{set_producing_units}
\title{Sets Producing Units for use in DataStore}
\usage{
set_producing_units(eml_object, prod_units, NPS = TRUE)
}
\arguments{
\item{eml_object}{is an R object imported (typically from an EML-formatted .xml file) using EML::read_eml(<filename>, from="xml").}

\item{prod_units}{A string that is the producing unit Unit Code or a list of unit codes, for example "ROMO" or c("ROMN", "SODN")}

\item{NPS}{Logical. Defaults to TRUE. \strong{Most users should leave this as the default}. Only under specific circumstances should it be set to FALSE: if you are \strong{not} publishing with NPS, if you need to set the publisher location to some place other than the Fort Collins Office (e.g. you are NOT working on a data package) or your product is "for" the NPS by not "by" the NPS and you need to specify a different agency, set NPS = FALSE. When NPS=TRUE, the function will over-write existing publisher info and inject NPS as the publisher along the the Central Office in Fort Collins as the location. Additionally, it sets the "for or by NPS" field to TRUE and specifies the originating agency as NPS.}
}
\value{
an EML object
}
\description{
set_producing_units inserts the unit code for the producing unit for the data/metadata into the EML metdata file.
}
\details{
inserts the unit code into the metadataProvider element. Currently cannot add to existing metadataProvider fields; it will just over-write them. It also currently only handles a single producing unit. See @param NPS for details on sub-functions. Additionally, information about the version of EML editor used will be injected into the metadata.
}
\examples{
\dontrun{
prod_units<-c("ABCD", "EFGH")
set_producing_units(eml_object, prod_units)
set_producing_units(eml_object, c("ABCD", "EFGH"))
set_producing_units(eml_object, "ABCD")
}
}
